Voici des exemples de données pour tester les opérations UPDATE (PUT) dans Postman pour chaque modèle :

### 1. ContactModel
```json
{
  "title": "Contactez notre équipe",
  "description1": "Nous sommes disponibles pour répondre à vos questions spirituelles.",
  "description2": "Laissez-nous un message et nous vous répondrons dans les 24h.",
  "phone": "+1234567890",
  "email": "contact@ministère.com"
}
```

### 2. CulturalAttireModel
```json
{
  "title": "Tenues Traditionnelles Sacrées",
  "description1": "Les vêtements liturgiques reflètent notre héritage spirituel.",
  "description2": "Chaque couleur symbolise un aspect différent de la foi.",
  "description3": "Les tissus utilisés sont naturels et bénis avant confection.",
  "description4": "La ceinture représente la vérité qui nous entoure.",
  "description5": "Le chapeau sacerdotal symbolise la couverture divine."
}
``` 

### 3. FollowersModel
```json
{
  "title": "Devenir un Disciple",
  "description1": "Le chemin du disciple demande engagement et persévérance.",
  "description2": "Nous offrons un programme de formation sur 12 mois.",
  "description3": "Les disciples participent à des retraites spirituelles trimestrielles.",
  "description4": "Chaque disciple est accompagné par un mentor expérimenté.",
  "description5": "L'étude biblique quotidienne est la base de la croissance."
}
```

### 4. HomePageModel
```json
{
  "video_section_title": "Découvrez notre ministère",
  "video_section_content": "Nos vidéos présentent les activités et enseignements de notre communauté."
}
```

### 5. HomePageVideoModel
```json
{
  "home_page_id": 1,
  "src": "https://example.com/videos/ministere.mp4",
  "poster": "https://example.com/images/ministere-poster.jpg"
}
```

### 6. YahwehModel
```json
{
  "title1": "Le Nom Sacré",
  "title2": "Yahweh notre Rocher",
  "description1": "Yahweh révèle son caractère à travers son nom.",
  "description2": "Le tétragramme YHWH représente l'Être suprême.",
  "description3": "Dieu se révèle comme Celui qui Est, Était et Vient.",
  "description4": "Son nom est sanctifié dans toutes les générations.",
  "description5": "Invoquer Yahweh avec révérence apporte protection.",
  "description6": "Le nom divin fut révélé à Moïse au buisson ardent."
}
```

### 7. YahwehbenModel
```json
{
  "title1": "Yahweh Ben",
  "title2": "Le Fils de la Promesse",
  "description1": "Yahweh Ben signifie 'Fils du Seigneur'.",
  "description2": "Préfiguration du Messie dans l'Ancien Testament.",
  "description3": "La filiation divine manifestée aux prophètes.",
  "description4": "L'oint de Yahweh vient établir son royaume.",
  "description5": "Jésus est l'accomplissement de cette prophétie.",
  "description6": "Le Fils partage la nature divine du Père.",
  "description7": "Par lui nous recevons l'adoption filiale.",
  "description8": "Sa venue accomplit toutes les promesses.",
  "description9": "En lui nous devenons fils et filles de Dieu."
}
```

### Conseils pour tester dans Postman :
1. Utilisez la méthode PUT
2. URL format : `http://votre-api.com/api/endpoint/:id` (remplacer par votre route réelle)
3. Dans l'onglet "Body", sélectionnez "raw" et "JSON"
4. Copiez-collez le JSON correspondant au modèle testé
5. Pour HomePageVideoModel, assurez-vous que le home_page_id existe
6. Vérifiez que l'ID dans l'URL correspond à un enregistrement existant

Exemple complet pour ContactModel :
- Méthode : PUT
- URL : `http://localhost:5000/api/contacts/1`
- Headers : `Content-Type: application/json`
- Body : raw + JSON (premier exemple ci-dessus)

Ces données couvrent tous les champs requis pour chaque modèle et respectent les structures définies dans votre code.