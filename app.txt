// require('dotenv').config();
// const express = require('express');
// const cors = require('cors');
// const path = require('path');
// const bodyParser = require('body-parser');

// const app = express();

// // Middlewares
// app.use(cors());
// app.use(express.json());
// app.use('/uploads', express.static(path.join(__dirname, 'uploads')));
// app.use(bodyParser.json()); // Pour parser les requêtes JSON
// app.use(bodyParser.urlencoded({
//   extended: true
// })); // Pour parser les données URL encodées

// // Routes
// app.use('/api/home', require('./routes/homeRoutes'));
// app.use('/api/gallery', require('./routes/galleryRoutes'));
// app.use('/api/sections', require('./routes/sectionRoutes'));
// app.use('/api/contact', require('./routes/contactRoutes'));
// app.use('/api/menu', require('./routes/menuRoutes'));

// // Routes pour contenu
// app.use('/api/balance', require('./routes/contenu/balanceRoutes'));
// app.use('/api/crucifixion', require('./routes/contenu/crucifixionRoutes'));
// app.use('/api/erosion', require('./routes/contenu/erosionRoutes'));
// app.use('/api/feasts', require('./routes/contenu/feastsRoutes'));
// app.use('/api/nation', require('./routes/contenu/nationRoutes'));
// app.use('/api/operation', require('./routes/contenu/operationRoutes'));
// app.use('/api/sabbath', require('./routes/contenu/sabbathRoutes'));
// app.use('/api/tetragrama', require('./routes/contenu/tetragramaRoutes'));
// app.use('/api/universe', require('./routes/contenu/universeRoutes'));
// app.use('/api/home-contenu', require('./routes/contenu-home/routes'));

// const PORT = process.env.PORT || 5000;
// app.listen(PORT, () => {
//   console.log(`Server running on port ${PORT}`);
// });
















































/****************************
 * Gestion des erreurs (à ajouter à la fin)
 ****************************/
// app.use((err, req, res, next) => {
//   console.error(err.stack);
//   res.status(500).json({ 
//     success: false,
//     message: 'Une erreur est survenue!',
//     error: process.env.NODE_ENV === 'development' ? err.message : undefined
//   });
// });

// // Route 404 (à ajouter après toutes les autres routes)
// // app.use('*', (req, res) => {
// // Route 404 (à ajouter après toutes les autres routes)
// app.all('*', (req, res) => {
//   res.status(404).json({
//     success: false,
//     message: 'Route non trouvée'
//   });
// });
